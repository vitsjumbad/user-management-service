name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "dev", "staging" ]
  pull_request:
    branches: [ "main", "dev", "staging" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_REPO }}:${GITHUB_SHA} .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_REPO }}:${GITHUB_SHA}

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker stop user-mgmt-container || true
            docker rm user-mgmt-container || true
            docker pull ${{ secrets.DOCKER_REPO }}:${GITHUB_SHA}
            docker run -d --name user-mgmt-container -p 8081:8081 ${{ secrets.DOCKER_REPO }}:${GITHUB_SHA}
